// Generated by dts-bundle v0.7.3

declare module 'qlearning' {
    import History from "qlearning/history";
    import State from "qlearning/state";
    import { Policy } from "qlearning/policy";
    class QLearning {
        name: string;
        state?: State;
        actions: Array<object>;
        alpha: number;
        policy?: Policy;
        history: History;
        functions: {
            cost?: (state: State, action: object) => number;
            reward?: (state: State) => number;
            printer?: (state: State) => void;
            stateGenerator?: (state: State, action: object) => object;
        };
        constructor(name: string, actions: Array<object>, alpha: number);
        verbose: boolean;
        setState(state: object): this;
        setCost(func: (state: State) => number): this;
        setReward(func: (state: State) => number): this;
        setPrinter(func: (state: State) => void): this;
        setStateGenerator(func: (state: State, action: object) => object): this;
        perceiveState(): this;
        start(initialState: object): this;
        learn(): this;
        step(): this;
    }
    export default QLearning;
}

declare module 'qlearning/history' {
    export default class History {
        readonly items: {
            state: object;
            action: object;
            reward: number;
        }[];
        readonly length: number;
        push(state?: object, action?: object, reward?: number): void;
        clear(): void;
    }
}

declare module 'qlearning/state' {
    export default class State {
        state: object;
        constructor(input: object);
        readonly hash: string;
    }
}

declare module 'qlearning/policy' {
    export interface IPolicy {
        action?: object;
        reward?: number;
    }
    export interface Policy {
        [name: string]: Array<IPolicy>;
    }
}

