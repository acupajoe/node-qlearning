var items=[],History=function(){function t(){}return Object.defineProperty(t.prototype,"items",{get:function(){return items},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"length",{get:function(){return items.length},enumerable:!0,configurable:!0}),t.prototype.push=function(t,e,r){this.items.push({state:t,action:e,reward:r})},t.prototype.clear=function(){items=[]},t}(),State=function(){function t(t){this.state=t}return Object.defineProperty(t.prototype,"hash",{get:function(){return JSON.stringify(this.state)},enumerable:!0,configurable:!0}),t}(),sortBy=require("lodash").sortBy,QLearning=function(){function t(t,e,r){return this.name=t,this.actions=e,this.state=null,this.alpha=r||.5,this.policy={},this.history=new History,this.functions={cost:null,reward:null,printer:null,stateGenerator:null},this}return Object.defineProperty(t.prototype,"verbose",{set:function(t){},enumerable:!0,configurable:!0}),t.prototype.setState=function(t){return this.state=t instanceof State?t:new State(t),this.history.push(this.state,null,null),this},t.prototype.setCost=function(t){if("function"!=typeof t)throw new Error("Cost must be defined as a function");return this.functions.cost=t,this},t.prototype.setReward=function(t){if("function"!=typeof t)throw new Error("Reward must be defined as a function");return this.functions.reward=t,this},t.prototype.setPrinter=function(t){if("function"!=typeof t)throw new Error("Printer must be defined as a function");return this.functions.printer=t,this},t.prototype.setStateGenerator=function(t){if("function"!=typeof t)throw new Error("State Generator must be defined as a function");return this.functions.stateGenerator=t,this},t.prototype.perceiveState=function(){return this.history.push(null,this.state,-1),this},t.prototype.start=function(t){return this.history.clear(),this.setState(t),this},t.prototype.learn=function(){var t,e,r,n,i,o=this.history.length;if(o<2)throw new Error("Agent has not moved - cannot learn yet!");if(t=this.history.items[o-2],e=this.history.items[o-1],null===t.action)throw new Error("Agent should perceive the current state after its last moving");if(null!==e.action)throw new Error("Agent should update the current state after moving");return r=this.functions.reward.call(this,t.state),n=this.functions.reward.call(this,e.state),i=this.alpha*(n-r),this.__updatePolicy(t.state,t.action,i),this},t.prototype.step=function(){var t,e;if(!this.state)throw new Error("Agent must have a state assigned - use `setState()`");return t=this.__explore(this.state),e=t[0],this.functions.reward(this.state),this.history.push({action:e.action,state:this.state}),this},t.prototype.__explore=function(t){},t.prototype.__predict=function(t,e){var r=this.functions.cost(t,e);if(r<0)return r;if(this.policy.hasOwnProperty(t.hash)){var n=this.policy[t.hash].filter(function(t){return t.action=e});return 0===n.length?this.functions.cost(t,e):n[0].reward}},t.prototype.__rewardOf=function(t){return this.functions.reward(t)},t.prototype.__updatePolicy=function(t,e,r){return this.policy.hasOwnProperty(t.hash)?this.policy[t.hash]=this.policy[t.hash].map(function(t){return t.action===e?{action:e,reward:r}:{action:t.action,reward:t.reward}}):(this.policy[t.hash]=[],this.policy[t.hash]=this.actions.map(function(t){return{action:t,reward:t===e?r:0}})),this.policy[t.hash]=sortBy(this.policy[t.hash],function(t){return-t.reward}),this},t}();export{History,State};export default QLearning;
